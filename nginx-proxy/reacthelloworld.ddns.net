# Put in "/etc/nginx/sites-available/"
# Add symlinks to "/etc/nginx/sites-enabled/"
# Lines managed by Certbot will be generated automatically, you can delete them.

upstream frontend {
	server 10.0.0.1:3000;
	keepalive 16;
}

upstream backend {
	server 10.0.0.1:5000;
	keepalive 16;
}

server {

	root /var/www/reacthelloworld.ddns.net/html;
	server_name reacthelloworld.ddns.net www.reacthelloworld.ddns.net;

	access_log /home/davidz/Code/reacthello-access.log;
	error_log /home/davidz/Code/reacthello-error.log;

	location = /api {
		return 302 /api/;
	}
	
	location /api/ {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass	http://backend;
	}

	location / {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass	http://frontend;
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/reacthelloworld.ddns.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/reacthelloworld.ddns.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = reacthelloworld.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

	listen 80;
	listen [::]:80;

	server_name reacthelloworld.ddns.net www.reacthelloworld.ddns.net;
    return 404; # managed by Certbot
}